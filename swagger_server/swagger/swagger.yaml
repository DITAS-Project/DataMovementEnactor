openapi: 3.0.0
info:
  title: Data Movement Enactor
  description: Data Movement Enactor API
  contact:
    email: bogdan.despotov@cloudsigma.com
  version: 0.0.4
servers:
- url: http://0.0.0.0:{port}/dme
  variables:
    port:
      default: "8111"
tags:
- name: Data Movement
  description: Calls to enact and complete a data movement action
paths:
  /init_movement/:
    post:
      tags:
      - Data Movement
      summary: Initialize data movement for destination using transformation
      operationId: init_movement
      requestBody:
        description: DME JSON schema sent by the DS4M
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqBody'
        required: true
      responses:
        200:
          description: Success initializing data movement
        400:
          description: Invalid data input
      x-openapi-router-controller: swagger_server.controllers.data_movement_controller
  /start_movement/:
    post:
      tags:
      - Data Movement
      summary: Communication between DMEs. Signals the other DME to prepare for movement
      operationId: start_movement
      requestBody:
        description: Target path for creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/startDM'
        required: true
      responses:
        200:
          description: Success
        400:
          description: Problem preparing for movement
      x-openapi-router-controller: swagger_server.controllers.data_movement_controller
  /finish_movement/:
    get:
      tags:
      - Data Movement
      description: Communication between DMEs. Indicates completed transfer between
        clusters. Relays finish call to DAL
      operationId: finish_movement
      responses:
        200:
          description: Success completing transfer and sending finish call to DAL
        400:
          description: Problem finishing movement or no active movement
      x-openapi-router-controller: swagger_server.controllers.data_movement_controller
components:
  schemas:
    ReqBody:
      type: object
      properties:
        dataSources:
          type: array
          items:
            $ref: '#/components/schemas/ReqBody_dataSources'
        movementsEnaction:
          $ref: '#/components/schemas/movementsEnaction'
    database:
      type: array
      items:
        $ref: '#/components/schemas/database_inner'
    movementsEnaction:
      type: array
      items:
        $ref: '#/components/schemas/movementsEnaction_inner'
    startDM:
      type: object
      properties:
        target_path:
          type: string
    ReqBody_dataSources:
      type: object
      properties:
        dataSource_id:
          type: string
        dataSource_type:
          type: string
        database:
          $ref: '#/components/schemas/database'
    database_inner_columns:
      type: object
      properties:
        column_id:
          type: string
    database_inner_tables:
      type: object
      properties:
        table_id:
          type: string
        columns:
          type: array
          items:
            $ref: '#/components/schemas/database_inner_columns'
    database_inner:
      type: object
      properties:
        database_id:
          type: string
        tables:
          type: array
          items:
            $ref: '#/components/schemas/database_inner_tables'
    movementsEnaction_inner:
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        transformation:
          type: string
        type:
          type: string

