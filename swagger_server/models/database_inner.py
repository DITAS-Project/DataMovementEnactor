# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.database_inner_tables import DatabaseInnerTables  # noqa: F401,E501
from swagger_server import util


class DatabaseInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, database_id: str=None, tables: List[DatabaseInnerTables]=None):  # noqa: E501
        """DatabaseInner - a model defined in Swagger

        :param database_id: The database_id of this DatabaseInner.  # noqa: E501
        :type database_id: str
        :param tables: The tables of this DatabaseInner.  # noqa: E501
        :type tables: List[DatabaseInnerTables]
        """
        self.swagger_types = {
            'database_id': str,
            'tables': List[DatabaseInnerTables]
        }

        self.attribute_map = {
            'database_id': 'database_id',
            'tables': 'tables'
        }
        self._database_id = database_id
        self._tables = tables

    @classmethod
    def from_dict(cls, dikt) -> 'DatabaseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The database_inner of this DatabaseInner.  # noqa: E501
        :rtype: DatabaseInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database_id(self) -> str:
        """Gets the database_id of this DatabaseInner.


        :return: The database_id of this DatabaseInner.
        :rtype: str
        """
        return self._database_id

    @database_id.setter
    def database_id(self, database_id: str):
        """Sets the database_id of this DatabaseInner.


        :param database_id: The database_id of this DatabaseInner.
        :type database_id: str
        """

        self._database_id = database_id

    @property
    def tables(self) -> List[DatabaseInnerTables]:
        """Gets the tables of this DatabaseInner.


        :return: The tables of this DatabaseInner.
        :rtype: List[DatabaseInnerTables]
        """
        return self._tables

    @tables.setter
    def tables(self, tables: List[DatabaseInnerTables]):
        """Sets the tables of this DatabaseInner.


        :param tables: The tables of this DatabaseInner.
        :type tables: List[DatabaseInnerTables]
        """

        self._tables = tables
